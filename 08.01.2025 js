/**
 * @param {Function} fn
 * @return {Function}
 */
function memoize(fn) {
    const cache = new Map(); // Cache to store results
    let callCount = 0; // Track number of actual calls

    return function (...args) {
        const key = JSON.stringify(args); // Serialize arguments as key
        
        if (cache.has(key)) {
            return cache.get(key); // Return cached value if available
        }

        // Compute result and store in cache
        const result = fn(...args);
        cache.set(key, result);
        callCount += 1;
        return result;
    };
}

/** 
 * let callCount = 0;
 * const memoizedFn = memoize(function (a, b) {
 *   callCount += 1;
 *   return a + b;
 * })
 * memoizedFn(2, 3) // 5
 * memoizedFn(2, 3) // 5
 * console.log(callCount) // 1 
 */
